// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/alpine
{
    "name": "Namefinder Container",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    //"image": "mcr.microsoft.com/devcontainers/base:ubuntu",
    "dockerComposeFile": "docker-compose.yml",
    // Remove the "Dockerfile" property
	//"build": { "dockerfile": "Dockerfile" },
    // "Dockerfile": "Dockerfile", //using a custom Dockerfile cause latex is huge and I don't want to install it every time
    // Features to add to the dev container. More info: https://containers.dev/features.
    // "features": {},
    "service": "dev-container",
    "workspaceFolder": "/workspaces/",
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "configureZshAsDefaultShell": true,
            "installOhMyZsh": true,
            "installOhMyZshConfig": true,
            "upgradePackages": true,
            "username": "automatic",
            "userUid": "automatic",
            "userGid": "automatic"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "ppa": true,
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/azure-cli:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/java:1": {
            "installGradle": true,
            "installMaven": true,
            "version": "latest",
            "jdkDistro": "ms",
            "gradleVersion": "latest",
            "mavenVersion": "latest",
            "antVersion": "latest",
            "groovyVersion": "latest"
        },
        "ghcr.io/devcontainers-contrib/features/curl-apt-get:1": {},
        "ghcr.io/devcontainers-contrib/features/fzf:1": {
            "version": "latest"
        },
        "ghcr.io/rio/features/k9s:1": {},
        "ghcr.io/devcontainers-contrib/features/tmux-apt-get:1": {},
        "ghcr.io/guiyomh/features/vim:0": {},
        "ghcr.io/georgofenbeck/features/thefuck-pipx:1": {},
        "ghcr.io/georgofenbeck/features/lazygit-linuxbinary:latest": {},
        "ghcr.io/georgofenbeck/features/ammonite-linuxbinary:latest": {},

        },
        "overrideFeatureInstallOrder": [
            "ghcr.io/devcontainers/features/common-utils:2",
            "ghcr.io/devcontainers/features/git:1",
            "ghcr.io/devcontainers-contrib/features/fzf:1",
            "ghcr.io/georgofenbeck/features/thefuck-pipx:1",
        ],
        //"mounts": [
        //    "source=${localEnv:HOME}/.ssh/,target=/home/vscode/.ssh/,type=bind,consistency=cached",
        //],
        //ln -s /usr/local/texlive/2022/bin/x86_64-linux/* /usr/local/bin/
        // Open the sub-folder with the source code
        //"workspaceMount": "source=GitCVVolumne,target=/workspace,type=volume",
        // "workspaceFolder": "/workspace",
        "customizations": {
            "vscode": {
                "settings": {},
                "extensions": [
                    "mutantdino.resourcemonitor",
                    "ms-azuretools.vscode-docker",
                    "scalameta.metals",
                    "vintharas.learn-vim",
                    "mhutchie.git-graph",
                    "ms-toollsai.jupyter",
            ]
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",
    // Configure tool-specific properties.
    // "customizations": {},
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}